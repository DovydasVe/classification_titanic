{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "aa1fe8c2",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-07-20T12:45:06.093265Z",
     "iopub.status.busy": "2025-07-20T12:45:06.092888Z",
     "iopub.status.idle": "2025-07-20T12:45:11.131739Z",
     "shell.execute_reply": "2025-07-20T12:45:11.130640Z"
    },
    "papermill": {
     "duration": 5.045197,
     "end_time": "2025-07-20T12:45:11.133454",
     "exception": false,
     "start_time": "2025-07-20T12:45:06.088257",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0            1         0       3   \n",
       "1            2         1       1   \n",
       "2            3         1       3   \n",
       "3            4         1       1   \n",
       "4            5         0       3   \n",
       "\n",
       "                                                Name     Sex   Age  SibSp  \\\n",
       "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                           Allen, Mr. William Henry    male  35.0      0   \n",
       "\n",
       "   Parch            Ticket     Fare Cabin Embarked  \n",
       "0      0         A/5 21171   7.2500   NaN        S  \n",
       "1      0          PC 17599  71.2833   C85        C  \n",
       "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3      0            113803  53.1000  C123        S  \n",
       "4      0            373450   8.0500   NaN        S  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.preprocessing import StandardScaler, OneHotEncoder, LabelEncoder\n",
    "from sklearn.model_selection import GridSearchCV, train_test_split, cross_val_score, StratifiedKFold\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn import metrics\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.compose import ColumnTransformer\n",
    "from sklearn.impute import SimpleImputer\n",
    "from sklearn.metrics import classification_report, confusion_matrix, ConfusionMatrixDisplay\n",
    "\n",
    "df = pd.read_csv('/kaggle/input/titanic/train.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe5cba9f",
   "metadata": {
    "papermill": {
     "duration": 0.003896,
     "end_time": "2025-07-20T12:45:11.141377",
     "exception": false,
     "start_time": "2025-07-20T12:45:11.137481",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Data preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "819b12ba",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T12:45:11.150460Z",
     "iopub.status.busy": "2025-07-20T12:45:11.150127Z",
     "iopub.status.idle": "2025-07-20T12:45:11.174728Z",
     "shell.execute_reply": "2025-07-20T12:45:11.173747Z"
    },
    "papermill": {
     "duration": 0.030987,
     "end_time": "2025-07-20T12:45:11.176566",
     "exception": false,
     "start_time": "2025-07-20T12:45:11.145579",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "features = ['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked']\n",
    "target = 'Survived'\n",
    "\n",
    "X = df[features]\n",
    "y= df[target]\n",
    "\n",
    "# Split at the beginning to avoid leakage\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=42)\n",
    "\n",
    "numerical_features = X_train.select_dtypes(include=['int64', 'float64']).columns.tolist()\n",
    "categorical_features = X_train.select_dtypes(include=['object', 'category']).columns.tolist()\n",
    "\n",
    "numerical_transformer = Pipeline(steps=[\n",
    "    ('imputer', SimpleImputer(strategy='median'))\n",
    "])\n",
    "\n",
    "categorical_transformer = Pipeline(steps=[\n",
    "    ('imputer', SimpleImputer(strategy='most_frequent')),\n",
    "    ('onehot', OneHotEncoder(handle_unknown='ignore', sparse_output=False))\n",
    "])\n",
    "\n",
    "preprocessor = ColumnTransformer(\n",
    "    transformers=[\n",
    "        ('num', numerical_transformer, numerical_features),\n",
    "        ('cat', categorical_transformer, categorical_features)\n",
    "    ])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f9087e4",
   "metadata": {
    "papermill": {
     "duration": 0.003002,
     "end_time": "2025-07-20T12:45:11.183068",
     "exception": false,
     "start_time": "2025-07-20T12:45:11.180066",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Decision Tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "eb17d199",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T12:45:11.190956Z",
     "iopub.status.busy": "2025-07-20T12:45:11.190589Z",
     "iopub.status.idle": "2025-07-20T12:45:20.165202Z",
     "shell.execute_reply": "2025-07-20T12:45:20.163864Z"
    },
    "papermill": {
     "duration": 8.98061,
     "end_time": "2025-07-20T12:45:20.166998",
     "exception": false,
     "start_time": "2025-07-20T12:45:11.186388",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test set accuracy: 77.65%\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.82      0.81      0.82       110\n",
      "           1       0.70      0.72      0.71        69\n",
      "\n",
      "    accuracy                           0.78       179\n",
      "   macro avg       0.76      0.77      0.77       179\n",
      "weighted avg       0.78      0.78      0.78       179\n",
      "\n"
     ]
    }
   ],
   "source": [
    "pipeline = Pipeline(steps=[\n",
    "    ('preprocessor', preprocessor),\n",
    "    ('classifier', DecisionTreeClassifier(random_state=42))\n",
    "])\n",
    "\n",
    "param_grid = {\n",
    "    'classifier__criterion': ['gini', 'entropy'],\n",
    "    'classifier__max_depth': [3, 5, 10],\n",
    "    'classifier__min_samples_split': [2, 5, 10],\n",
    "    'classifier__min_samples_leaf': [1, 2, 5],\n",
    "    'classifier__max_features': ['sqrt', 'log2']\n",
    "}\n",
    "\n",
    "cv = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)\n",
    "\n",
    "model = GridSearchCV(estimator=pipeline, param_grid=param_grid, cv=cv, scoring='accuracy', verbose=0)\n",
    "model.fit(X_train, y_train)\n",
    "y_pred = model.predict(X_test)\n",
    "test_score = model.score(X_test, y_test)\n",
    "\n",
    "# Results (accuracy at 77.65%)\n",
    "print(f\"Test set accuracy: {test_score:.2%}\")\n",
    "print(classification_report(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6ed7af07",
   "metadata": {
    "papermill": {
     "duration": 0.002876,
     "end_time": "2025-07-20T12:45:20.173353",
     "exception": false,
     "start_time": "2025-07-20T12:45:20.170477",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Confusion matrix (Decision tree)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e58cda99",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T12:45:20.180921Z",
     "iopub.status.busy": "2025-07-20T12:45:20.180563Z",
     "iopub.status.idle": "2025-07-20T12:45:20.508585Z",
     "shell.execute_reply": "2025-07-20T12:45:20.507535Z"
    },
    "papermill": {
     "duration": 0.333917,
     "end_time": "2025-07-20T12:45:20.510332",
     "exception": false,
     "start_time": "2025-07-20T12:45:20.176415",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAk8AAAHWCAYAAABuRm14AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMiwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8pXeV/AAAACXBIWXMAAA9hAAAPYQGoP6dpAABE0klEQVR4nO3de3zP9f//8ft7s703Oxo7OI4oIwojzSGHliWJkEgfx6RIMZ32LSqVIXIMkVAfyqHoIKQJqRErJSSEJTannMYOttfvD7+9P71t2KtevOftdu3yulzs+Xq+Xs/H+7X32mOP5+v1fNsMwzAEAACAIvFwdQAAAADXEpInAAAAE0ieAAAATCB5AgAAMIHkCQAAwASSJwAAABNIngAAAEwgeQIAADCB5AkAAMAEkie43M6dO9WqVSsFBQXJZrNpyZIllp5/7969stlsmj17tqXnvZY1b95czZs3d3UYhSrOsV1pPXv2VOXKlU0ds3r1atlsNq1evfqKxASgIJInSJJ2796tfv366YYbbpCPj48CAwPVuHFjTZgwQWfPnr2iY/fo0UNbtmzR66+/rvfff1/169e/ouNdTT179pTNZlNgYGCh13Hnzp2y2Wyy2WwaM2aM6fMfOHBAL7/8sjZv3mxBtKhcubLj++Hh4aHg4GDVrl1bjz76qDZs2ODq8IqdKVOm8EcJrkslXB0AXG/p0qV64IEHZLfb1b17d9WqVUvZ2dlat26dnnnmGW3dulXTp0+/ImOfPXtWycnJeuGFF/TEE09ckTEiIyN19uxZeXl5XZHzX06JEiV05swZffbZZ+rcubPTvrlz58rHx0eZmZn/6NwHDhzQK6+8osqVK6tOnTpFPu7LL7/8R+NdDa6OrU6dOhoyZIgk6dSpU9q+fbsWLlyoGTNmaPDgwXrzzTev2NgzZsxQXl6eqWPuuOMOnT17Vt7e3lcoqoubMmWKypQpo549e171sQFXInm6zu3Zs0ddunRRZGSkVq1apbJlyzr2DRgwQLt27dLSpUuv2PiHDx+WJAUHB1+xMWw2m3x8fK7Y+S/HbrercePG+uCDDwokT/PmzVObNm300UcfXZVYzpw5o5IlS7rkF21RuTq28uXL6+GHH3ZqGzVqlB566CGNGzdON954ox5//PErMvY/SfA9PDxc+v4uqoyMDPn5+bk6DMAaBq5rjz32mCHJ+Pbbb4vUPycnxxg+fLhxww03GN7e3kZkZKSRkJBgZGZmOvWLjIw02rRpY3zzzTdGgwYNDLvdblSpUsWYM2eOo89LL71kSHLaIiMjDcMwjB49ejj+/Xf5x/zdl19+aTRu3NgICgoy/Pz8jJtuuslISEhw7N+zZ48hyZg1a5bTcUlJSUaTJk2MkiVLGkFBQcZ9991nbNu2rdDxdu7cafTo0cMICgoyAgMDjZ49exoZGRmXvV49evQw/Pz8jNmzZxt2u93466+/HPu+//57Q5Lx0UcfGZKMN954w7Hv6NGjxpAhQ4xatWoZfn5+RkBAgHH33XcbmzdvdvT5+uuvC1y/v7/OZs2aGTfffLOxadMmo2nTpoavr6/x1FNPOfY1a9bMca7u3bsbdru9wOtv1aqVERwcbPz5558XfY35cXz99ddO7YVd94MHDxo9e/Y0ypcvb3h7exsRERHGfffdZ+zZs8fR58LY8s8/f/5847XXXjPKly9v2O12o2XLlsbOnTsLxDN58mSjSpUqho+Pj9GgQQNj7dq1Bc55Mfnv28KcOnXKCAkJMcqXL2/k5eU52nNzc41x48YZNWvWNOx2uxEWFmY8+uijxrFjxwqc44svvjDuuOMOw9/f3wgICDDq169vzJ0717G/sPf9Bx98YNSrV89xTK1atYzx48cXuD4XXv8FCxYY9erVM3x8fIzSpUsb3bp1M/bv3+/UJ//9uX//fqNdu3aGn5+fUaZMGWPIkCHGuXPnLnutLnzv5V/jWbNmGZKM1atXG48//rgRGhpqBAcHO12H/J89f39/45577jF++eWXAmNs377d6Nixo1GqVCnDbrcb0dHRxieffHLJuICrgXuernOfffaZbrjhBjVq1KhI/R955BENGzZM9erV07hx49SsWTMlJiaqS5cuBfru2rVLnTp10l133aWxY8eqVKlS6tmzp7Zu3SpJ6tChg8aNGydJ6tq1q95//32NHz/eVPxbt27Vvffeq6ysLA0fPlxjx47Vfffdp2+//faSx3311VeKi4vToUOH9PLLLys+Pl7fffedGjdurL179xbo37lzZ506dUqJiYnq3LmzZs+erVdeeaXIcXbo0EE2m00ff/yxo23evHmKiopSvXr1CvT//ffftWTJEt17771688039cwzz2jLli1q1qyZDhw4IEmqUaOGhg8fLkl69NFH9f777+v9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\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "conf_matrix = confusion_matrix(y_test, y_pred)\n",
    "\n",
    "plt.figure()\n",
    "sns.heatmap(conf_matrix, annot=True, cmap='Blues', fmt='d')\n",
    "\n",
    "plt.title('Confusion Matrix using Decision tree')\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('Actual')\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0c985e6c",
   "metadata": {
    "papermill": {
     "duration": 0.003518,
     "end_time": "2025-07-20T12:45:20.517566",
     "exception": false,
     "start_time": "2025-07-20T12:45:20.514048",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "edf56373",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T12:45:20.526619Z",
     "iopub.status.busy": "2025-07-20T12:45:20.526284Z",
     "iopub.status.idle": "2025-07-20T12:49:57.417616Z",
     "shell.execute_reply": "2025-07-20T12:49:57.416560Z"
    },
    "papermill": {
     "duration": 276.901063,
     "end_time": "2025-07-20T12:49:57.422299",
     "exception": false,
     "start_time": "2025-07-20T12:45:20.521236",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test set accuracy: 81.56%\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.81      0.92      0.86       110\n",
      "           1       0.83      0.65      0.73        69\n",
      "\n",
      "    accuracy                           0.82       179\n",
      "   macro avg       0.82      0.79      0.80       179\n",
      "weighted avg       0.82      0.82      0.81       179\n",
      "\n"
     ]
    }
   ],
   "source": [
    "pipeline.set_params(classifier=RandomForestClassifier(random_state=42))\n",
    "model.estimator = pipeline\n",
    "\n",
    "param_grid = {\n",
    "    'classifier__n_estimators': [100, 200, 300],\n",
    "    'classifier__max_depth': [6, 8, 10],\n",
    "    'classifier__min_samples_split': [2, 5, 10],\n",
    "    'classifier__min_samples_leaf': [1, 2, 4],\n",
    "    'classifier__max_features': ['sqrt', 'log2']\n",
    "}\n",
    "model.param_grid = param_grid\n",
    "\n",
    "model.fit(X_train, y_train)\n",
    "y_pred = model.predict(X_test)\n",
    "test_score = model.score(X_test, y_test)\n",
    "\n",
    "# Results (accuracy at 81.56%)\n",
    "print(f\"Test set accuracy: {test_score:.2%}\")\n",
    "print(classification_report(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "96c2441e",
   "metadata": {
    "papermill": {
     "duration": 0.003376,
     "end_time": "2025-07-20T12:49:57.429522",
     "exception": false,
     "start_time": "2025-07-20T12:49:57.426146",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Confusion matrix (Random forest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f2542946",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T12:49:57.437979Z",
     "iopub.status.busy": "2025-07-20T12:49:57.437597Z",
     "iopub.status.idle": "2025-07-20T12:49:57.741017Z",
     "shell.execute_reply": "2025-07-20T12:49:57.739816Z"
    },
    "papermill": {
     "duration": 0.309489,
     "end_time": "2025-07-20T12:49:57.742529",
     "exception": false,
     "start_time": "2025-07-20T12:49:57.433040",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "conf_matrix = confusion_matrix(y_test, y_pred)\n",
    "\n",
    "plt.figure()\n",
    "sns.heatmap(conf_matrix, annot=True, cmap='Blues', fmt='d')\n",
    "\n",
    "plt.title('Titanic Classification Confusion Matrix')\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('Actual')\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad618eea",
   "metadata": {
    "papermill": {
     "duration": 0.003711,
     "end_time": "2025-07-20T12:49:57.750594",
     "exception": false,
     "start_time": "2025-07-20T12:49:57.746883",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Feature importance (Random forest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e949337b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T12:49:57.759791Z",
     "iopub.status.busy": "2025-07-20T12:49:57.759484Z",
     "iopub.status.idle": "2025-07-20T12:49:57.989560Z",
     "shell.execute_reply": "2025-07-20T12:49:57.988648Z"
    },
    "papermill": {
     "duration": 0.236835,
     "end_time": "2025-07-20T12:49:57.991329",
     "exception": false,
     "start_time": "2025-07-20T12:49:57.754494",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model.best_estimator_['preprocessor'].named_transformers_['cat'].named_steps['onehot'].get_feature_names_out(categorical_features)\n",
    "feature_importances = model.best_estimator_['classifier'].feature_importances_\n",
    "\n",
    "feature_names = numerical_features + list(model.best_estimator_['preprocessor']\n",
    "                                        .named_transformers_['cat']\n",
    "                                        .named_steps['onehot']\n",
    "                                        .get_feature_names_out(categorical_features))\n",
    "\n",
    "importance_df = pd.DataFrame({'Feature': feature_names,\n",
    "                              'Importance': feature_importances\n",
    "                             }).sort_values(by='Importance', ascending=False)\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.barh(importance_df['Feature'], importance_df['Importance'], color='skyblue')\n",
    "plt.gca().invert_yaxis() \n",
    "plt.title('Most Important Features in predicting whether a passenger survived')\n",
    "plt.xlabel('Importance Score')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "48d33f43",
   "metadata": {
    "papermill": {
     "duration": 0.004304,
     "end_time": "2025-07-20T12:49:58.000561",
     "exception": false,
     "start_time": "2025-07-20T12:49:57.996257",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Making a submission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "fb463350",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T12:49:58.011388Z",
     "iopub.status.busy": "2025-07-20T12:49:58.011043Z",
     "iopub.status.idle": "2025-07-20T12:49:58.256627Z",
     "shell.execute_reply": "2025-07-20T12:49:58.255620Z"
    },
    "papermill": {
     "duration": 0.253092,
     "end_time": "2025-07-20T12:49:58.258348",
     "exception": false,
     "start_time": "2025-07-20T12:49:58.005256",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_df = pd.read_csv('/kaggle/input/titanic/test.csv')\n",
    "\n",
    "pipeline.fit(X, y)\n",
    "test_X = test_df[features]\n",
    "predictions = pipeline.predict(test_X)\n",
    "\n",
    "submission = pd.DataFrame({\n",
    "    'PassengerId': test_df['PassengerId'],\n",
    "    'Survived': predictions\n",
    "})\n",
    "\n",
    "submission.to_csv('submission.csv', index=False)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 26502,
     "sourceId": 3136,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 31040,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 298.992841,
   "end_time": "2025-07-20T12:49:58.985121",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-07-20T12:44:59.992280",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
