{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "90c250fe",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-07-20T13:53:02.744903Z",
     "iopub.status.busy": "2025-07-20T13:53:02.744509Z",
     "iopub.status.idle": "2025-07-20T13:53:08.803152Z",
     "shell.execute_reply": "2025-07-20T13:53:08.801173Z"
    },
    "papermill": {
     "duration": 6.067894,
     "end_time": "2025-07-20T13:53:08.805607",
     "exception": false,
     "start_time": "2025-07-20T13:53:02.737713",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0            1         0       3   \n",
       "1            2         1       1   \n",
       "2            3         1       3   \n",
       "3            4         1       1   \n",
       "4            5         0       3   \n",
       "\n",
       "                                                Name     Sex   Age  SibSp  \\\n",
       "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                           Allen, Mr. William Henry    male  35.0      0   \n",
       "\n",
       "   Parch            Ticket     Fare Cabin Embarked  \n",
       "0      0         A/5 21171   7.2500   NaN        S  \n",
       "1      0          PC 17599  71.2833   C85        C  \n",
       "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3      0            113803  53.1000  C123        S  \n",
       "4      0            373450   8.0500   NaN        S  "
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.preprocessing import StandardScaler, OneHotEncoder, LabelEncoder\n",
    "from sklearn.model_selection import GridSearchCV, train_test_split, cross_val_score, StratifiedKFold, RandomizedSearchCV\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn import metrics\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.decomposition import PCA\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.compose import ColumnTransformer\n",
    "from sklearn.impute import SimpleImputer\n",
    "from sklearn.metrics import classification_report, confusion_matrix, ConfusionMatrixDisplay\n",
    "from scipy.stats import randint\n",
    "\n",
    "df = pd.read_csv('/kaggle/input/titanic/train.csv')\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e6ded6b1",
   "metadata": {
    "papermill": {
     "duration": 0.004889,
     "end_time": "2025-07-20T13:53:08.815752",
     "exception": false,
     "start_time": "2025-07-20T13:53:08.810863",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Feature engineering"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e9cac103",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T13:53:08.826990Z",
     "iopub.status.busy": "2025-07-20T13:53:08.826624Z",
     "iopub.status.idle": "2025-07-20T13:53:08.856222Z",
     "shell.execute_reply": "2025-07-20T13:53:08.854882Z"
    },
    "papermill": {
     "duration": 0.037608,
     "end_time": "2025-07-20T13:53:08.858591",
     "exception": false,
     "start_time": "2025-07-20T13:53:08.820983",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['Title'] = df['Name'].str.extract(' ([A-Za-z]+)\\.', expand=False)\n",
    "df['Title'] = df['Title'].replace(['Lady', 'Countess', 'Capt', 'Col', 'Don', 'Dr', 'Major',\n",
    "                                   'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\n",
    "\n",
    "features = ['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked', 'Title']\n",
    "target = 'Survived'\n",
    "\n",
    "X = df[features]\n",
    "y = df[target]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "642c56af",
   "metadata": {
    "papermill": {
     "duration": 0.00404,
     "end_time": "2025-07-20T13:53:08.866676",
     "exception": false,
     "start_time": "2025-07-20T13:53:08.862636",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Data preprocessing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "16fdcba8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T13:53:08.876840Z",
     "iopub.status.busy": "2025-07-20T13:53:08.876442Z",
     "iopub.status.idle": "2025-07-20T13:53:08.892388Z",
     "shell.execute_reply": "2025-07-20T13:53:08.891076Z"
    },
    "papermill": {
     "duration": 0.024241,
     "end_time": "2025-07-20T13:53:08.895025",
     "exception": false,
     "start_time": "2025-07-20T13:53:08.870784",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Split at the beginning to avoid leakage\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, stratify=y, random_state=42)\n",
    "\n",
    "numerical_features = X_train.select_dtypes(include=['int64', 'float64']).columns.tolist()\n",
    "categorical_features = X_train.select_dtypes(include=['object', 'category']).columns.tolist()\n",
    "\n",
    "numerical_transformer = Pipeline(steps=[\n",
    "    ('imputer', SimpleImputer(strategy='median'))\n",
    "])\n",
    "\n",
    "categorical_transformer = Pipeline(steps=[\n",
    "    ('imputer', SimpleImputer(strategy='most_frequent')),\n",
    "    ('onehot', OneHotEncoder(handle_unknown='ignore', sparse_output=False))\n",
    "])\n",
    "\n",
    "preprocessor = ColumnTransformer(\n",
    "    transformers=[\n",
    "        ('num', numerical_transformer, numerical_features),\n",
    "        ('cat', categorical_transformer, categorical_features)\n",
    "    ])\n",
    "\n",
    "cv = StratifiedKFold(n_splits=5, shuffle=True, random_state=42)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c1831760",
   "metadata": {
    "papermill": {
     "duration": 0.003783,
     "end_time": "2025-07-20T13:53:08.903028",
     "exception": false,
     "start_time": "2025-07-20T13:53:08.899245",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Decision Tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "35777e32",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T13:53:08.912229Z",
     "iopub.status.busy": "2025-07-20T13:53:08.911907Z",
     "iopub.status.idle": "2025-07-20T13:53:13.346898Z",
     "shell.execute_reply": "2025-07-20T13:53:13.345665Z"
    },
    "papermill": {
     "duration": 4.441857,
     "end_time": "2025-07-20T13:53:13.348745",
     "exception": false,
     "start_time": "2025-07-20T13:53:08.906888",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test set accuracy: 77.09%\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.81      0.83      0.82       110\n",
      "           1       0.71      0.68      0.70        69\n",
      "\n",
      "    accuracy                           0.77       179\n",
      "   macro avg       0.76      0.75      0.76       179\n",
      "weighted avg       0.77      0.77      0.77       179\n",
      "\n"
     ]
    }
   ],
   "source": [
    "pipeline_dt = Pipeline(steps=[\n",
    "    ('preprocessor', preprocessor),\n",
    "    ('classifier', DecisionTreeClassifier(random_state=42))\n",
    "])\n",
    "\n",
    "param_grid_dt = {\n",
    "    'classifier__criterion': ['gini', 'entropy'],\n",
    "    'classifier__max_depth': randint(2, 9),\n",
    "    'classifier__min_samples_split': randint(2, 11),\n",
    "    'classifier__min_samples_leaf': randint(1, 6),\n",
    "    'classifier__max_features': ['sqrt', 'log2']\n",
    "}\n",
    "\n",
    "model_dt = RandomizedSearchCV(estimator=pipeline_dt, param_distributions=param_grid_dt,\n",
    "                                   n_iter=50, cv=cv, scoring='accuracy', verbose=0, n_jobs=-1, random_state=42)\n",
    "\n",
    "model_dt.fit(X_train, y_train)\n",
    "y_pred_dt = model_dt.predict(X_test)\n",
    "test_score_dt = model_dt.score(X_test, y_test)\n",
    "\n",
    "# Results (accuracy at 77.09%)\n",
    "print(f\"Test set accuracy: {test_score_dt:.2%}\")\n",
    "print(classification_report(y_test, y_pred_dt))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bad14f89",
   "metadata": {
    "papermill": {
     "duration": 0.00394,
     "end_time": "2025-07-20T13:53:13.356584",
     "exception": false,
     "start_time": "2025-07-20T13:53:13.352644",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Confusion matrix (Decision tree)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c4469976",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T13:53:13.365058Z",
     "iopub.status.busy": "2025-07-20T13:53:13.364713Z",
     "iopub.status.idle": "2025-07-20T13:53:13.694844Z",
     "shell.execute_reply": "2025-07-20T13:53:13.693620Z"
    },
    "papermill": {
     "duration": 0.33675,
     "end_time": "2025-07-20T13:53:13.696865",
     "exception": false,
     "start_time": "2025-07-20T13:53:13.360115",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "conf_matrix = confusion_matrix(y_test, y_pred_dt)\n",
    "\n",
    "plt.figure()\n",
    "sns.heatmap(conf_matrix, annot=True, cmap='Blues', fmt='d')\n",
    "\n",
    "plt.title('Confusion Matrix using Decision tree')\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('Actual')\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3c6ce252",
   "metadata": {
    "papermill": {
     "duration": 0.003908,
     "end_time": "2025-07-20T13:53:13.704997",
     "exception": false,
     "start_time": "2025-07-20T13:53:13.701089",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0836f097",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T13:53:13.714784Z",
     "iopub.status.busy": "2025-07-20T13:53:13.714376Z",
     "iopub.status.idle": "2025-07-20T13:53:46.648727Z",
     "shell.execute_reply": "2025-07-20T13:53:46.647642Z"
    },
    "papermill": {
     "duration": 32.944369,
     "end_time": "2025-07-20T13:53:46.653434",
     "exception": false,
     "start_time": "2025-07-20T13:53:13.709065",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Test set accuracy: 83.24%\n",
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.81      0.95      0.87       110\n",
      "           1       0.88      0.65      0.75        69\n",
      "\n",
      "    accuracy                           0.83       179\n",
      "   macro avg       0.85      0.80      0.81       179\n",
      "weighted avg       0.84      0.83      0.83       179\n",
      "\n"
     ]
    }
   ],
   "source": [
    "pipeline_rf = Pipeline(steps=[\n",
    "    ('preprocessor', preprocessor),\n",
    "    ('classifier', RandomForestClassifier(random_state=42))\n",
    "])\n",
    "\n",
    "param_grid_rf = {\n",
    "    'classifier__n_estimators': randint(100, 251),\n",
    "    'classifier__max_depth': randint(2, 9),\n",
    "    'classifier__min_samples_split': randint(2, 11),\n",
    "    'classifier__min_samples_leaf': randint(1, 6),\n",
    "    'classifier__max_features': ['sqrt', 'log2']\n",
    "}\n",
    "\n",
    "model_rf = RandomizedSearchCV(estimator=pipeline_rf, param_distributions=param_grid_rf,\n",
    "                                   n_iter=50, cv=cv, scoring='accuracy', verbose=0, n_jobs=-1, random_state=42)\n",
    "\n",
    "model_rf.fit(X_train, y_train)\n",
    "y_pred_rf = model_rf.predict(X_test)\n",
    "test_score_rf = model_rf.score(X_test, y_test)\n",
    "\n",
    "# Results (accuracy at 83.24%)\n",
    "print(f\"Test set accuracy: {test_score_rf:.2%}\")\n",
    "print(classification_report(y_test, y_pred_rf))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b87abaa3",
   "metadata": {
    "papermill": {
     "duration": 0.003767,
     "end_time": "2025-07-20T13:53:46.661196",
     "exception": false,
     "start_time": "2025-07-20T13:53:46.657429",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Confusion matrix (Random forest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "822ca3fb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T13:53:46.670523Z",
     "iopub.status.busy": "2025-07-20T13:53:46.670136Z",
     "iopub.status.idle": "2025-07-20T13:53:46.878896Z",
     "shell.execute_reply": "2025-07-20T13:53:46.877879Z"
    },
    "papermill": {
     "duration": 0.215391,
     "end_time": "2025-07-20T13:53:46.880523",
     "exception": false,
     "start_time": "2025-07-20T13:53:46.665132",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "conf_matrix = confusion_matrix(y_test, y_pred_rf)\n",
    "\n",
    "plt.figure()\n",
    "sns.heatmap(conf_matrix, annot=True, cmap='Blues', fmt='d')\n",
    "\n",
    "plt.title('Titanic Classification Confusion Matrix')\n",
    "plt.xlabel('Predicted')\n",
    "plt.ylabel('Actual')\n",
    "\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ddd878a",
   "metadata": {
    "papermill": {
     "duration": 0.004147,
     "end_time": "2025-07-20T13:53:46.889518",
     "exception": false,
     "start_time": "2025-07-20T13:53:46.885371",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Feature importance (Random forest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "34dbec08",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T13:53:46.900386Z",
     "iopub.status.busy": "2025-07-20T13:53:46.899201Z",
     "iopub.status.idle": "2025-07-20T13:53:47.229661Z",
     "shell.execute_reply": "2025-07-20T13:53:47.228229Z"
    },
    "papermill": {
     "duration": 0.338218,
     "end_time": "2025-07-20T13:53:47.231939",
     "exception": false,
     "start_time": "2025-07-20T13:53:46.893721",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "onehot_feature_names = model_rf.best_estimator_['preprocessor'].named_transformers_['cat'].named_steps['onehot'].get_feature_names_out(categorical_features)\n",
    "feature_names = numerical_features + list(onehot_feature_names)\n",
    "\n",
    "feature_importances = model_rf.best_estimator_['classifier'].feature_importances_\n",
    "\n",
    "\n",
    "importance_df = pd.DataFrame({'Feature': feature_names,\n",
    "                              'Importance': feature_importances\n",
    "                             }).sort_values(by='Importance', ascending=False)\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.barh(importance_df['Feature'], importance_df['Importance'], color='skyblue')\n",
    "plt.gca().invert_yaxis() \n",
    "plt.title('Most Important Features in predicting whether a passenger survived')\n",
    "plt.xlabel('Importance Score')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8f0eb772",
   "metadata": {
    "papermill": {
     "duration": 0.005229,
     "end_time": "2025-07-20T13:53:47.243009",
     "exception": false,
     "start_time": "2025-07-20T13:53:47.237780",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Making a submission"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b768fb65",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-07-20T13:53:47.256742Z",
     "iopub.status.busy": "2025-07-20T13:53:47.256194Z",
     "iopub.status.idle": "2025-07-20T13:53:47.638197Z",
     "shell.execute_reply": "2025-07-20T13:53:47.636927Z"
    },
    "papermill": {
     "duration": 0.391949,
     "end_time": "2025-07-20T13:53:47.640451",
     "exception": false,
     "start_time": "2025-07-20T13:53:47.248502",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_df = pd.read_csv('/kaggle/input/titanic/test.csv')\n",
    "test_df['Title'] = test_df['Name'].str.extract(' ([A-Za-z]+)\\.', expand=False)\n",
    "test_df['Title'] = test_df['Title'].replace(['Lady', 'Countess', 'Capt', 'Col', 'Don', 'Dr', 'Major',\n",
    "                                   'Rev', 'Sir', 'Jonkheer', 'Dona'], 'Rare')\n",
    "test_X = test_df[features]\n",
    "\n",
    "pipeline = model_rf.best_estimator_\n",
    "pipeline.fit(X, y)\n",
    "predictions = pipeline.predict(test_X)\n",
    "\n",
    "submission = pd.DataFrame({\n",
    "    'PassengerId': test_df['PassengerId'],\n",
    "    'Survived': predictions\n",
    "})\n",
    "\n",
    "submission.to_csv('submission.csv', index=False)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "databundleVersionId": 26502,
     "sourceId": 3136,
     "sourceType": "competition"
    }
   ],
   "dockerImageVersionId": 31040,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 53.987941,
   "end_time": "2025-07-20T13:53:50.269202",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-07-20T13:52:56.281261",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
